name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: "Major, minor or patch?"
        required: true
        options:
          - prerelease
          - premajor
          - preminor
          - prepatch
          - major
          - minor
          - patch
      updateDeps:
        type: choice
        description: "Update pkg-b?"
        required: true
        options:
          - "no update"
          - "update"
          - "update latest"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: "@gatanaso"
      - name: Git config
        run: |
          git config user.name ${{github.actor}}
          git config user.email ${{github.actor}}@users.noreply.github.com
      - name: Clean 'yarn' cache
        run: yarn cache clean
      - name: Install dependencies
        run: yarn
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPMRC_TOKEN}}
      - name: Update pkg-b version
        run: |
          if [[ "${{github.event.inputs.updateDeps}}" == "update" ]]; then
            echo "updating pkg-b based on range defined in package.json"
            yarn upgrade @gatanaso/pkg-b;
          elif [[ "${{github.event.inputs.updateDeps}}" == "update latest" ]]; then
            echo "updating pkg-b to the latest version available"
            yarn upgrade @gatanaso/pkg-b --latest;
          else 
            echo "not updating pkg-b version"
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPMRC_TOKEN}}
      - name: Commit version update
        run: |
          (git commit -am '[automated commit] bump pkg-b version') || true
          (git push) || true
      - name: Release to GitHub
        run: yarn run release:${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
